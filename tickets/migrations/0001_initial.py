# Generated by Django 5.0.1 on 2025-10-04 07:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='نام دسته\u200cبندی تیکت\u200cها', max_length=100, verbose_name='نام دسته\u200cبندی')),
                ('slug', models.SlugField(blank=True, help_text='نامک برای استفاده در آدرس', unique=True, verbose_name='نامک URL')),
                ('description', models.TextField(blank=True, help_text='توضیحات کامل درباره دسته\u200cبندی', verbose_name='توضیحات')),
                ('icon', models.CharField(blank=True, help_text='نام آیکون FontAwesome', max_length=50, verbose_name='آیکون')),
                ('color', models.CharField(default='blue', help_text='رنگ دسته\u200cبندی برای نمایش', max_length=20, verbose_name='رنگ')),
                ('response_time_hours', models.PositiveIntegerField(default=24, help_text='حداکثر زمان پاسخ به ساعت', verbose_name='زمان پاسخ (ساعت)')),
                ('resolution_time_hours', models.PositiveIntegerField(default=72, help_text='حداکثر زمان حل مسئله به ساعت', verbose_name='زمان حل مسئله (ساعت)')),
                ('is_active', models.BooleanField(default=True, help_text='آیا این دسته\u200cبندی فعال باشد؟', verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('auto_assign_to', models.ForeignKey(blank=True, help_text='کاربری که تیکت\u200cهای این دسته به او واگذار شود', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_assigned_categories', to=settings.AUTH_USER_MODEL, verbose_name='انتساب خودکار به')),
            ],
            options={
                'verbose_name': 'دسته\u200cبندی تیکت',
                'verbose_name_plural': 'دسته\u200cبندی\u200cهای تیکت',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.UUIDField(default=uuid.uuid4, help_text='شناسه منحصر به فرد تیکت', unique=True, verbose_name='شناسه تیکت')),
                ('title', models.CharField(help_text='عنوان کوتاه و مفید برای تیکت', max_length=200, verbose_name='عنوان تیکت')),
                ('description', models.TextField(help_text='شرح کامل مسئله یا درخواست', verbose_name='شرح مسئله')),
                ('status', models.CharField(choices=[('open', 'باز'), ('in_progress', 'در حال بررسی'), ('pending', 'در انتظار پاسخ مشتری'), ('resolved', 'حل شده'), ('closed', 'بسته'), ('cancelled', 'لغو شده')], default='open', help_text='وضعیت فعلی تیکت', max_length=20, verbose_name='وضعیت')),
                ('priority', models.PositiveIntegerField(choices=[(1, 'کم'), (2, 'متوسط'), (3, 'بالا'), (4, 'فوری'), (5, 'بحرانی')], default=2, help_text='اولویت تیکت', verbose_name='اولویت')),
                ('contact_email', models.EmailField(blank=True, help_text='ایمیل جایگزین برای پاسخ', max_length=254, verbose_name='ایمیل تماس')),
                ('contact_phone', models.CharField(blank=True, help_text='شماره تلفن برای تماس فوری', max_length=20, verbose_name='تلفن تماس')),
                ('user_agent', models.TextField(blank=True, help_text='اطلاعات فنی مرورگر کاربر', verbose_name='اطلاعات مرورگر')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='آدرس IP کاربر', null=True, verbose_name='آدرس IP')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='لیست فایل\u200cهای پیوست شده', verbose_name='فایل\u200cهای پیوست')),
                ('tags', models.JSONField(blank=True, default=list, help_text='برچسب\u200cهایی برای دسته\u200cبندی بهتر', verbose_name='برچسب\u200cها')),
                ('ai_category_suggestion', models.CharField(blank=True, help_text='دسته\u200cبندی پیشنهادی توسط هوش مصنوعی', max_length=100, verbose_name='پیشنهاد دسته\u200cبندی AI')),
                ('ai_priority_suggestion', models.PositiveIntegerField(blank=True, help_text='اولویت پیشنهادی توسط هوش مصنوعی', null=True, verbose_name='پیشنهاد اولویت AI')),
                ('ai_sentiment_score', models.FloatField(blank=True, help_text='امتیاز احساسات متن (منفی تا مثبت)', null=True, verbose_name='امتیاز احساسات AI')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('first_response_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان اولین پاسخ')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان حل مسئله')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان بستن')),
                ('sla_breached', models.BooleanField(default=False, help_text='آیا SLA نقض شده است؟', verbose_name='نقض SLA')),
                ('customer_satisfaction', models.PositiveIntegerField(blank=True, help_text='امتیاز رضایت مشتری (1-5)', null=True, verbose_name='رضایت مشتری')),
                ('resolution_time_minutes', models.PositiveIntegerField(blank=True, help_text='زمان صرف شده برای حل مسئله', null=True, verbose_name='زمان حل (دقیقه)')),
                ('assigned_to', models.ForeignKey(blank=True, help_text='کارشناسی که تیکت به او واگذار شده', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='واگذار شده به')),
                ('user', models.ForeignKey(help_text='کاربری که تیکت را ایجاد کرده', on_delete=django.db.models.deletion.CASCADE, related_name='created_tickets', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('category', models.ForeignKey(help_text='دسته\u200cبندی تیکت', on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.ticketcategory', verbose_name='دسته\u200cبندی')),
            ],
            options={
                'verbose_name': 'تیکت پشتیبانی',
                'verbose_name_plural': 'تیکت\u200cهای پشتیبانی',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_type', models.CharField(choices=[('customer', 'مشتری'), ('staff', 'کارشناس'), ('system', 'سیستم'), ('ai', 'هوش مصنوعی')], default='customer', help_text='نوع پاسخ\u200cدهنده', max_length=20, verbose_name='نوع پاسخ')),
                ('content', models.TextField(help_text='متن پاسخ', verbose_name='متن پاسخ')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='فایل\u200cهای پیوست شده به پاسخ', verbose_name='فایل\u200cهای پیوست')),
                ('is_private', models.BooleanField(default=False, help_text='آیا این پاسخ فقط برای کارشناسان قابل مشاهده باشد؟', verbose_name='خصوصی')),
                ('ai_sentiment', models.CharField(blank=True, help_text='تحلیل احساسات توسط AI', max_length=20, verbose_name='احساسات AI')),
                ('ai_suggestions', models.JSONField(blank=True, default=list, help_text='پیشنهادات هوش مصنوعی', verbose_name='پیشنهادات AI')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='tickets.ticket', verbose_name='تیکت')),
                ('user', models.ForeignKey(help_text='کاربری که پاسخ را ارسال کرده', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'پاسخ تیکت',
                'verbose_name_plural': 'پاسخ\u200cهای تیکت',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='فایل پیوست', upload_to='tickets/attachments/', verbose_name='فایل')),
                ('filename', models.CharField(help_text='نام اصلی فایل', max_length=255, verbose_name='نام فایل')),
                ('file_size', models.PositiveIntegerField(help_text='اندازه فایل به بایت', verbose_name='اندازه فایل')),
                ('content_type', models.CharField(help_text='نوع MIME فایل', max_length=100, verbose_name='نوع فایل')),
                ('is_safe', models.BooleanField(default=True, help_text='آیا فایل امنیت بررسی شده است؟', verbose_name='امن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ آپلود')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_attachments', to='tickets.ticket', verbose_name='تیکت')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='آپلود شده توسط')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_attachments', to='tickets.ticketreply', verbose_name='پاسخ')),
            ],
            options={
                'verbose_name': 'فایل پیوست',
                'verbose_name_plural': 'فایل\u200cهای پیوست',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['status', 'priority'], name='tickets_tic_status_b256f6_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['user', 'status'], name='tickets_tic_user_id_ee01b8_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['assigned_to', 'status'], name='tickets_tic_assigne_e36302_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['created_at'], name='tickets_tic_created_5dd600_idx'),
        ),
    ]
