# Generated by Django 5.0.1 on 2025-10-04 07:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComputationMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('completed_sessions', models.PositiveIntegerField(default=0)),
                ('failed_sessions', models.PositiveIntegerField(default=0)),
                ('cancelled_sessions', models.PositiveIntegerField(default=0)),
                ('average_processing_time', models.FloatField(default=0)),
                ('peak_processing_time', models.FloatField(default=0)),
                ('average_memory_usage', models.FloatField(default=0)),
                ('peak_memory_usage', models.FloatField(default=0)),
                ('cache_hit_rate', models.FloatField(default=0)),
                ('cache_miss_count', models.PositiveIntegerField(default=0)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('free_user_sessions', models.PositiveIntegerField(default=0)),
                ('premium_user_sessions', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Computation Metrics',
                'verbose_name_plural': 'Computation Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ComputationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('session_type', models.CharField(choices=[('budget_calculation', 'Budget Calculation'), ('security_analysis', 'Security Analysis'), ('performance_test', 'Performance Test'), ('data_processing', 'Data Processing'), ('ai_inference', 'AI Inference'), ('custom', 'Custom Computation')], max_length=30)),
                ('input_schema', models.JSONField(default=dict, help_text='JSON schema for input validation')),
                ('output_schema', models.JSONField(default=dict, help_text='Expected output structure')),
                ('default_config', models.JSONField(default=dict, help_text='Default configuration values')),
                ('estimated_time_seconds', models.PositiveIntegerField(default=60)),
                ('memory_requirement_mb', models.PositiveIntegerField(default=256)),
                ('cpu_intensive', models.BooleanField(default=False)),
                ('required_user_type', models.CharField(choices=[('free', 'Free'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='free', max_length=20)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=100.0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Computation Template',
                'verbose_name_plural': 'Computation Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ComputationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_hash', models.CharField(max_length=64, unique=True)),
                ('session_type', models.CharField(choices=[('budget_calculation', 'Budget Calculation'), ('security_analysis', 'Security Analysis'), ('performance_test', 'Performance Test'), ('data_processing', 'Data Processing'), ('ai_inference', 'AI Inference'), ('custom', 'Custom Computation')], max_length=30)),
                ('input_data', models.JSONField()),
                ('output_data', models.JSONField()),
                ('configuration', models.JSONField(default=dict)),
                ('computation_time', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Computation Result',
                'verbose_name_plural': 'Computation Results',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['input_hash', 'session_type'], name='computation_input_h_689df2_idx'), models.Index(fields=['expires_at', 'is_valid'], name='computation_expires_82576a_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComputationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('session_type', models.CharField(choices=[('budget_calculation', 'Budget Calculation'), ('security_analysis', 'Security Analysis'), ('performance_test', 'Performance Test'), ('data_processing', 'Data Processing'), ('ai_inference', 'AI Inference'), ('custom', 'Custom Computation')], max_length=30)),
                ('product_name', models.CharField(blank=True, max_length=100)),
                ('input_data', models.JSONField(default=dict)),
                ('output_data', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('memory_usage_mb', models.FloatField(blank=True, null=True)),
                ('cpu_usage_percent', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('priority', models.PositiveIntegerField(default=5)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Computation Session',
                'verbose_name_plural': 'Computation Sessions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='computation_status_c80fd4_idx'), models.Index(fields=['user', 'session_type'], name='computation_user_id_a13056_idx')],
            },
        ),
    ]
